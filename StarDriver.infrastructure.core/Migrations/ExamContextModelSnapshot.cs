// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StarDriver.infrastructure.core.DomainContexts;

namespace StarDriver.infrastructure.core.Migrations
{
    [DbContext(typeof(ExamContext))]
    partial class ExamContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0-rc.2.20475.6");

            modelBuilder.Entity("StarDriver.domain.core.Business.Exams.Exam", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("DateFinish")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DateRealization")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tittle")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Exams");
                });

            modelBuilder.Entity("StarDriver.domain.core.Business.Exams.Question", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Answer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ExamId")
                        .HasColumnType("int");

                    b.Property<string>("OptionalImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Options")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Score")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ScoreAnswer")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ExamId");

                    b.ToTable("Questions");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Question");
                });

            modelBuilder.Entity("StarDriver.domain.core.Business.Exams.MultipleChoice", b =>
                {
                    b.HasBaseType("StarDriver.domain.core.Business.Exams.Question");

                    b.HasDiscriminator().HasValue("MultipleChoice");
                });

            modelBuilder.Entity("StarDriver.domain.core.Business.Exams.OnlyAnswer", b =>
                {
                    b.HasBaseType("StarDriver.domain.core.Business.Exams.Question");

                    b.Property<string>("UserAnswer")
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("OnlyAnswer");
                });

            modelBuilder.Entity("StarDriver.domain.core.Business.Exams.Open", b =>
                {
                    b.HasBaseType("StarDriver.domain.core.Business.Exams.Question");

                    b.HasDiscriminator().HasValue("Open");
                });

            modelBuilder.Entity("StarDriver.domain.core.Business.Exams.Question", b =>
                {
                    b.HasOne("StarDriver.domain.core.Business.Exams.Exam", null)
                        .WithMany("_questions")
                        .HasForeignKey("ExamId");
                });

            modelBuilder.Entity("StarDriver.domain.core.Business.Exams.Exam", b =>
                {
                    b.Navigation("_questions");
                });
#pragma warning restore 612, 618
        }
    }
}
